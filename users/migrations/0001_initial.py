# Generated by Django 4.2.7 on 2023-12-02 17:23

from django.db import migrations, models
import django.utils.timezone
import users.models.user_model


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserModel",
            fields=[
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.AutoField(
                        editable=False,
                        help_text="User id",
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="id",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="User legal first name",
                        max_length=50,
                        verbose_name="first name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        help_text="User legal last name",
                        max_length=50,
                        verbose_name="last name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email already exists"
                        },
                        help_text="User email",
                        max_length=255,
                        unique=True,
                        verbose_name="email",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        help_text="User hashed password",
                        max_length=128,
                        verbose_name="password",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        help_text="User profile photo",
                        null=True,
                        upload_to=users.models.user_model.rename,
                        verbose_name="photo",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="User phone number",
                        max_length=15,
                        null=True,
                        verbose_name="phone number",
                    ),
                ),
                (
                    "phone_number_verified",
                    models.BooleanField(
                        default=False,
                        help_text="User phone number verified",
                        verbose_name="phone number verified",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="User registration date",
                        verbose_name="date joined",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True,
                        help_text="User last login date",
                        null=True,
                        verbose_name="last login",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "db_table": "user",
            },
        ),
    ]
