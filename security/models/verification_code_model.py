from datetime import timedelta

from django.conf import settings
from django.db import models
from django.utils import timezone
from django.utils.translation import gettext_lazy as _

from .verification_code_type_model import VerificationCodeType


class VerificationCode(models.Model):
    id = models.AutoField(
        verbose_name=_("id"),
        help_text=_("Autogenerated (non editable) verification code id"),
        primary_key=True,
        unique=True,
        editable=False,
    )
    user = models.OneToOneField(
        verbose_name=_("user"),
        help_text=_("User user"),
        to=settings.AUTH_USER_MODEL,
        on_delete=models.CASCADE,
        related_name="verification_code",
        editable=False,
    )
    code = models.CharField(
        verbose_name=_("code"),
        help_text=_("User hashed verification code"),
        max_length=128,
        editable=False,
    )
    type = models.ForeignKey(
        verbose_name=_("type"),
        help_text=_("User verification code type"),
        to=VerificationCodeType,
        on_delete=models.PROTECT,
        related_name="verification_code",
        editable=False,
    )
    date_requested = models.DateTimeField(
        verbose_name=_("date requested"),
        help_text=_("User verification code request timestamp"),
        auto_now_add=True,
        editable=False,
    )

    class Meta:
        verbose_name = _("verification code")
        verbose_name_plural = _("verification codes")
        db_table = "verification_code"

    def __str__(self):
        return f"{self.type} - {self.user}"

    @property
    def is_valid(self) -> bool:
        return timezone.now() < self.date_requested + timedelta(minutes=20)
